/*! rollup-plugin-babili v3.1.0 | (c) 2017 undefined | MIT license (see LICENSE) */import babiliPreset from'babel-preset-babili';import bannerPlugin from'@comandeer/babel-plugin-banner';import{getCommentContent}from'@comandeer/babel-plugin-banner/utils';import{transform}from'babel-core';function filterBabiliOptions(a){const b=['banner','sourceMap','comments'],c={};return Object.keys(a).filter((d)=>{-1===b.indexOf(d)&&(c[d]=a[d])}),c}function isString(a){return null!=a&&'string'==typeof a}function isFn(a){return null!=a&&'function'==typeof a}function isFnOrString(a){return isString(a)||isFn(a)}function babili(a={}){let b;return{name:'babili',options({banner:c}){b=c},transformBundle(c){const d=filterBabiliOptions(a),e={presets:[[babiliPreset,d]],sourceMaps:!('undefined'!=typeof a.sourceMap)||!!a.sourceMap,comments:!('undefined'!=typeof a.comments)||!!a.comments};if(isFnOrString(a.banner)||isFnOrString(b)){let h=a.banner||b;h=isFn(h)?h():h;const i=getCommentContent(h);let j=!1;e.plugins=[[bannerPlugin,{banner:h}]],e.comments||(e.shouldPrintComment=(k)=>{return j||k!==i?!1:(j=!0,!0)})}const{code:f,map:g}=transform(c,e);return{code:f,map:g}}}}export default babili;
//# sourceMappingURL=rollup-plugin-babili.es2015.js.map
